# Config
export CLICOLOR=1
alias grep="grep --color=auto"
export GREP_COLOR='1;32'
export LSCOLORS=ExFxCxDxBxegedabagacad
export LC_ALL=en_US.UTF-8
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
# export EDITOR=vim

## env variables
export N_PREFIX="$HOME/.n"
export PATH=$N_PREFIX/bin:$PATH

bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous on"

# aliases

## misc

### search
alias r-g='rg -iA29 -B13 $1'
alias r-gc='rg -A29 -B13 $1'
alias r-g7='rg -iA7 -B4 $1'
alias r-g1='rg -i $1'

alias g-g='git grep -niA29 -B13 $1'
alias g-gc='git grep -nA29 -B13 $1'
alias g-g7='git grep -niA7 -B4 $1'
alias g-g1='git grep -ni $1'
alias g-gn='git grep --name-only'

alias ls='ls -l'
alias lsa='ls -a'

### yarn
alias y-d='yarn run dev'
alias y-t='yarn run test'

### vpn fix
alias fixvpn='sudo ifconfig en0 down && sudo route -n flush && sudo ifconfig en0 up'  # TODO: test this next time VPN fails

### fzf
alias fzv='vim $(fzf)'
alias fzn='nvim $(fzf)'

### print colors
alias print-colors='for i in {0..255}; do printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 8 )); then echo ; fi ; done'

## folders
alias p-awa='cd ~/code/pigeonlab/web-app'
alias p-dbd='cd ~/code/pigeonlab/dashboard'
alias p-api='cd ~/code/pigeonlab/api'
alias p-dbv='cd ~/code/pigeonlab/dbv'
alias p-dkr='cd ~/code/pigeonlab/docker-main'
alias p-lab='cd ~/code/pigeonlab/'

alias notes='cd ~/Google\ Drive/GD\ personal/notes/pigeonlab'
alias dot='cd ~/.dotfiles'

## git
alias g-d='git diff --ignore-space-at-eol -b -w -U27 --ignore-blank-lines'
alias g-dn='git diff --name-only --ignore-space-at-eol -b -w --ignore-blank-lines'
alias g-d7='git diff --ignore-space-at-eol -b -w -U7 --ignore-blank-lines'
alias g-d1='git diff --ignore-space-at-eol -b -w --ignore-blank-lines'
alias g-ds='git diff --ignore-space-at-eol -b -w -U27 --ignore-blank-lines --staged'
alias g-ds7='git diff --ignore-space-at-eol -b -w -U7 --ignore-blank-lines --staged'
alias g-ds1='git diff --ignore-space-at-eol -b -w --ignore-blank-lines --staged'
alias g-dh='g-d HEAD^ HEAD'

alias g-dw='g-d src/templates/ src/js/ src/css/'
alias g-dt='g-d src/templates/'
alias g-dj='g-d src/js/'
alias g-dc='g-d src/css/'
alias g-dua='g-d src/api src/test'
alias g-da='g-d src/api'
alias g-dt='g-d src/test'

alias g-a='git add'
alias g-au='git add -u'
alias g-auw='git add src/templates/ src/js/ src/css/'
alias g-at='git add src/templates/'
alias g-aj='git add src/js/'
alias g-ac='git add src/css/'
alias g-aua='git add api/ test/'
alias g-aa='git add api/'
# alias g-at='git add test/'

alias g-s='git status'
alias g-sh1='git show --ignore-space-at-eol -b -w --ignore-blank-lines'
alias g-sh='g-sh1 -U27 '
alias g-shh='g-sh HEAD'
alias g-shh1='g-sh1 HEAD'

alias g-st='git stash'
alias g-stl='git stash list'
alias g-sts='git stash show -p'
alias g-std='git stash drop 0'
alias g-stp='git stash push -m'
alias g-sta='git stash apply'

alias g-l='git log'
alias g-lm='git log --author="aswin"'
alias g-c='git checkout'
alias g-cm='git commit -m'
alias g-cma='git commit --amend'
alias g-b='git branch'
alias g-pl='git pull'
alias g-ps='git push'
alias g-m='git merge'

alias g-r='git reset'
alias g-rh='git reset HEAD'
alias g-rs='git restore --staged'
alias g-rb='git rebase -i'
alias g-uis='git update-index --skip-worktree'
alias g-ui='git update-index --no-skip-worktree'
alias g-uil='git ls-files -v | grep "^S"'

## docker
alias d-p='docker ps'
alias d-pr='p-dkr && ./docker_prepare.sh'
alias d-pn='p-dkr && ./docker_prune.sh'

alias d-l='p-dkr && ./docker_logs.sh'
alias d-la='p-dkr && ./docker_logs.sh api1'
alias d-la2='p-dkr && ./docker_logs.sh api2'
# alias d-la1='p-dkr && ./docker_logs.sh api1'
# alias d-la2='p-dkr && ./docker_logs.sh api2'
alias d-lw='p-dkr && ./docker_logs.sh web-app'
alias d-ld='p-dkr && ./docker_logs.sh dashboard'

alias d-c='p-dkr && ./docker_connect.sh'
alias d-ca='p-dkr && ./docker_connect.sh api1'
alias d-cw='p-dkr && ./docker_connect.sh web-app'
alias d-cd='p-dkr && ./docker_connect.sh dashboard'

alias d-cp='p-dkr && docker-compose build'

alias d-r='p-dkr && ./restart_container.sh'
alias d-ra='p-dkr && ./restart_container.sh api1 && ./restart_container.sh api2'
alias d-rla='p-dkr && ./restart_container.sh api1 && ./restart_container.sh api2 && d-la'
alias d-ra1='p-dkr && ./restart_container.sh api1'
alias d-ra2='p-dkr && ./restart_container.sh api2'
alias d-rw='p-dkr && ./restart_container.sh web-app'
alias d-rd='p-dkr && ./restart_container.sh dashboard'

alias d-rb='p-dkr && ./rebuild_container.sh'
alias d-rba1='p-dkr && ./rebuild_container.sh api1'
alias d-rba2='p-dkr && ./rebuild_container.sh api2'
alias d-rbw='p-dkr && ./rebuild_container.sh web-app'
alias d-rbd='p-dkr && ./rebuild_container.sh dashboard'

alias d-sa='p-dkr && ./start.sh'
alias d-so='p-dkr && ./stop.sh'

# functions
f-1() {
    if [ "$2" ]
    then
        find "$1" -iname *"$2"*;
    else
        find ./ -iname *"$1"*;
    fi
}
f-d() {
    if [ "$2" ]
    then
        find "$1" -iname *"$2"* -type f -delete;
    else
        find ./ -iname *"$1"* -type f -delete;
    fi
}
# show git branch in iterm

## paste following in Profiles > General > Badge: \(session.path) @ \(user.gitBranch)

# test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
# function iterm2_print_user_vars() {
#     iterm2_set_user_var gitBranch $((git branch 2> /dev/null) | grep \* | cut -c3-)
# }
# source ~/.git-completion.bash

# show git branch in prompt
#source /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh
#export PS1='\[\033[0;32m\]\u\[\033[0;36m\] @ \h \w\[\033[0;32m\]$(__git_ps1)\n└─ ▶\[\033[0m\] '
